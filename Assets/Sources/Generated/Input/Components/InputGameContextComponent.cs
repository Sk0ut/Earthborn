//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputContext {

    public InputEntity gameContextEntity { get { return GetGroup(InputMatcher.GameContext).GetSingleEntity(); } }
    public GameContextComponent gameContext { get { return gameContextEntity.gameContext; } }
    public bool hasGameContext { get { return gameContextEntity != null; } }

    public InputEntity SetGameContext(bool newEnabled) {
        if (hasGameContext) {
            throw new Entitas.EntitasException("Could not set GameContext!\n" + this + " already has an entity with GameContextComponent!",
                "You should check if the context already has a gameContextEntity before setting it or use context.ReplaceGameContext().");
        }
        var entity = CreateEntity();
        entity.AddGameContext(newEnabled);
        return entity;
    }

    public void ReplaceGameContext(bool newEnabled) {
        var entity = gameContextEntity;
        if (entity == null) {
            entity = SetGameContext(newEnabled);
        } else {
            entity.ReplaceGameContext(newEnabled);
        }
    }

    public void RemoveGameContext() {
        gameContextEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public GameContextComponent gameContext { get { return (GameContextComponent)GetComponent(InputComponentsLookup.GameContext); } }
    public bool hasGameContext { get { return HasComponent(InputComponentsLookup.GameContext); } }

    public void AddGameContext(bool newEnabled) {
        var index = InputComponentsLookup.GameContext;
        var component = CreateComponent<GameContextComponent>(index);
        component.enabled = newEnabled;
        AddComponent(index, component);
    }

    public void ReplaceGameContext(bool newEnabled) {
        var index = InputComponentsLookup.GameContext;
        var component = CreateComponent<GameContextComponent>(index);
        component.enabled = newEnabled;
        ReplaceComponent(index, component);
    }

    public void RemoveGameContext() {
        RemoveComponent(InputComponentsLookup.GameContext);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherGameContext;

    public static Entitas.IMatcher<InputEntity> GameContext {
        get {
            if (_matcherGameContext == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.GameContext);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherGameContext = matcher;
            }

            return _matcherGameContext;
        }
    }
}
