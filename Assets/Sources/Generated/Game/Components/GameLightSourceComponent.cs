//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public LightSourceComponent lightSource { get { return (LightSourceComponent)GetComponent(GameComponentsLookup.LightSource); } }
    public bool hasLightSource { get { return HasComponent(GameComponentsLookup.LightSource); } }

    public void AddLightSource(bool newActive, int newRadius) {
        var index = GameComponentsLookup.LightSource;
        var component = CreateComponent<LightSourceComponent>(index);
        component.active = newActive;
        component.radius = newRadius;
        AddComponent(index, component);
    }

    public void ReplaceLightSource(bool newActive, int newRadius) {
        var index = GameComponentsLookup.LightSource;
        var component = CreateComponent<LightSourceComponent>(index);
        component.active = newActive;
        component.radius = newRadius;
        ReplaceComponent(index, component);
    }

    public void RemoveLightSource() {
        RemoveComponent(GameComponentsLookup.LightSource);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherLightSource;

    public static Entitas.IMatcher<GameEntity> LightSource {
        get {
            if (_matcherLightSource == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.LightSource);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherLightSource = matcher;
            }

            return _matcherLightSource;
        }
    }
}
