//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public EventTypeComponent eventType { get { return (EventTypeComponent)GetComponent(GameComponentsLookup.EventType); } }
    public bool hasEventType { get { return HasComponent(GameComponentsLookup.EventType); } }

    public void AddEventType(Event newValue) {
        var index = GameComponentsLookup.EventType;
        var component = CreateComponent<EventTypeComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceEventType(Event newValue) {
        var index = GameComponentsLookup.EventType;
        var component = CreateComponent<EventTypeComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveEventType() {
        RemoveComponent(GameComponentsLookup.EventType);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherEventType;

    public static Entitas.IMatcher<GameEntity> EventType {
        get {
            if (_matcherEventType == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.EventType);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherEventType = matcher;
            }

            return _matcherEventType;
        }
    }
}
