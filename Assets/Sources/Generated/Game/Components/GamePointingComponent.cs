//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PointingComponent pointing { get { return (PointingComponent)GetComponent(GameComponentsLookup.Pointing); } }
    public bool hasPointing { get { return HasComponent(GameComponentsLookup.Pointing); } }

    public void AddPointing(Direction newDirection) {
        var index = GameComponentsLookup.Pointing;
        var component = CreateComponent<PointingComponent>(index);
        component.direction = newDirection;
        AddComponent(index, component);
    }

    public void ReplacePointing(Direction newDirection) {
        var index = GameComponentsLookup.Pointing;
        var component = CreateComponent<PointingComponent>(index);
        component.direction = newDirection;
        ReplaceComponent(index, component);
    }

    public void RemovePointing() {
        RemoveComponent(GameComponentsLookup.Pointing);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPointing;

    public static Entitas.IMatcher<GameEntity> Pointing {
        get {
            if (_matcherPointing == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Pointing);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPointing = matcher;
            }

            return _matcherPointing;
        }
    }
}
