//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PickupItemEventComponent pickupItemEvent { get { return (PickupItemEventComponent)GetComponent(GameComponentsLookup.PickupItemEvent); } }
    public bool hasPickupItemEvent { get { return HasComponent(GameComponentsLookup.PickupItemEvent); } }

    public void AddPickupItemEvent(GameEntity newPicker, GameEntity newItem) {
        var index = GameComponentsLookup.PickupItemEvent;
        var component = CreateComponent<PickupItemEventComponent>(index);
        component.picker = newPicker;
        component.item = newItem;
        AddComponent(index, component);
    }

    public void ReplacePickupItemEvent(GameEntity newPicker, GameEntity newItem) {
        var index = GameComponentsLookup.PickupItemEvent;
        var component = CreateComponent<PickupItemEventComponent>(index);
        component.picker = newPicker;
        component.item = newItem;
        ReplaceComponent(index, component);
    }

    public void RemovePickupItemEvent() {
        RemoveComponent(GameComponentsLookup.PickupItemEvent);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPickupItemEvent;

    public static Entitas.IMatcher<GameEntity> PickupItemEvent {
        get {
            if (_matcherPickupItemEvent == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PickupItemEvent);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPickupItemEvent = matcher;
            }

            return _matcherPickupItemEvent;
        }
    }
}
