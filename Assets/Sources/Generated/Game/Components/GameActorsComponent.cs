//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity actorsEntity { get { return GetGroup(GameMatcher.Actors).GetSingleEntity(); } }
    public ActorsComponent actors { get { return actorsEntity.actors; } }
    public bool hasActors { get { return actorsEntity != null; } }

    public GameEntity SetActors(System.Collections.Generic.LinkedList<GameEntity> newValue) {
        if (hasActors) {
            throw new Entitas.EntitasException("Could not set Actors!\n" + this + " already has an entity with ActorsComponent!",
                "You should check if the context already has a actorsEntity before setting it or use context.ReplaceActors().");
        }
        var entity = CreateEntity();
        entity.AddActors(newValue);
        return entity;
    }

    public void ReplaceActors(System.Collections.Generic.LinkedList<GameEntity> newValue) {
        var entity = actorsEntity;
        if (entity == null) {
            entity = SetActors(newValue);
        } else {
            entity.ReplaceActors(newValue);
        }
    }

    public void RemoveActors() {
        actorsEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ActorsComponent actors { get { return (ActorsComponent)GetComponent(GameComponentsLookup.Actors); } }
    public bool hasActors { get { return HasComponent(GameComponentsLookup.Actors); } }

    public void AddActors(System.Collections.Generic.LinkedList<GameEntity> newValue) {
        var index = GameComponentsLookup.Actors;
        var component = CreateComponent<ActorsComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceActors(System.Collections.Generic.LinkedList<GameEntity> newValue) {
        var index = GameComponentsLookup.Actors;
        var component = CreateComponent<ActorsComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveActors() {
        RemoveComponent(GameComponentsLookup.Actors);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherActors;

    public static Entitas.IMatcher<GameEntity> Actors {
        get {
            if (_matcherActors == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Actors);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherActors = matcher;
            }

            return _matcherActors;
        }
    }
}
