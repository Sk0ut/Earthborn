//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity currentFloorEntity { get { return GetGroup(GameMatcher.CurrentFloor).GetSingleEntity(); } }
    public CurrentFloorComponent currentFloor { get { return currentFloorEntity.currentFloor; } }
    public bool hasCurrentFloor { get { return currentFloorEntity != null; } }

    public GameEntity SetCurrentFloor(int newValue) {
        if (hasCurrentFloor) {
            throw new Entitas.EntitasException("Could not set CurrentFloor!\n" + this + " already has an entity with CurrentFloorComponent!",
                "You should check if the context already has a currentFloorEntity before setting it or use context.ReplaceCurrentFloor().");
        }
        var entity = CreateEntity();
        entity.AddCurrentFloor(newValue);
        return entity;
    }

    public void ReplaceCurrentFloor(int newValue) {
        var entity = currentFloorEntity;
        if (entity == null) {
            entity = SetCurrentFloor(newValue);
        } else {
            entity.ReplaceCurrentFloor(newValue);
        }
    }

    public void RemoveCurrentFloor() {
        currentFloorEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CurrentFloorComponent currentFloor { get { return (CurrentFloorComponent)GetComponent(GameComponentsLookup.CurrentFloor); } }
    public bool hasCurrentFloor { get { return HasComponent(GameComponentsLookup.CurrentFloor); } }

    public void AddCurrentFloor(int newValue) {
        var index = GameComponentsLookup.CurrentFloor;
        var component = CreateComponent<CurrentFloorComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCurrentFloor(int newValue) {
        var index = GameComponentsLookup.CurrentFloor;
        var component = CreateComponent<CurrentFloorComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCurrentFloor() {
        RemoveComponent(GameComponentsLookup.CurrentFloor);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCurrentFloor;

    public static Entitas.IMatcher<GameEntity> CurrentFloor {
        get {
            if (_matcherCurrentFloor == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CurrentFloor);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCurrentFloor = matcher;
            }

            return _matcherCurrentFloor;
        }
    }
}
