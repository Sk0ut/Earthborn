//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TileMapComponent tileMap { get { return (TileMapComponent)GetComponent(GameComponentsLookup.TileMap); } }
    public bool hasTileMap { get { return HasComponent(GameComponentsLookup.TileMap); } }

    public void AddTileMap(int newWidth, int newHeight) {
        var index = GameComponentsLookup.TileMap;
        var component = CreateComponent<TileMapComponent>(index);
        component.width = newWidth;
        component.height = newHeight;
        AddComponent(index, component);
    }

    public void ReplaceTileMap(int newWidth, int newHeight) {
        var index = GameComponentsLookup.TileMap;
        var component = CreateComponent<TileMapComponent>(index);
        component.width = newWidth;
        component.height = newHeight;
        ReplaceComponent(index, component);
    }

    public void RemoveTileMap() {
        RemoveComponent(GameComponentsLookup.TileMap);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTileMap;

    public static Entitas.IMatcher<GameEntity> TileMap {
        get {
            if (_matcherTileMap == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TileMap);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTileMap = matcher;
            }

            return _matcherTileMap;
        }
    }
}
