//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AttackActionComponent attackAction { get { return (AttackActionComponent)GetComponent(GameComponentsLookup.AttackAction); } }
    public bool hasAttackAction { get { return HasComponent(GameComponentsLookup.AttackAction); } }

    public void AddAttackAction(Direction newDirection) {
        var index = GameComponentsLookup.AttackAction;
        var component = CreateComponent<AttackActionComponent>(index);
        component.direction = newDirection;
        AddComponent(index, component);
    }

    public void ReplaceAttackAction(Direction newDirection) {
        var index = GameComponentsLookup.AttackAction;
        var component = CreateComponent<AttackActionComponent>(index);
        component.direction = newDirection;
        ReplaceComponent(index, component);
    }

    public void RemoveAttackAction() {
        RemoveComponent(GameComponentsLookup.AttackAction);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAttackAction;

    public static Entitas.IMatcher<GameEntity> AttackAction {
        get {
            if (_matcherAttackAction == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AttackAction);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAttackAction = matcher;
            }

            return _matcherAttackAction;
        }
    }
}
