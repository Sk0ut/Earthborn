//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class UiContext {

    public UiEntity canvasEntity { get { return GetGroup(UiMatcher.Canvas).GetSingleEntity(); } }
    public CanvasComponent canvas { get { return canvasEntity.canvas; } }
    public bool hasCanvas { get { return canvasEntity != null; } }

    public UiEntity SetCanvas(UnityEngine.GameObject newValue) {
        if (hasCanvas) {
            throw new Entitas.EntitasException("Could not set Canvas!\n" + this + " already has an entity with CanvasComponent!",
                "You should check if the context already has a canvasEntity before setting it or use context.ReplaceCanvas().");
        }
        var entity = CreateEntity();
        entity.AddCanvas(newValue);
        return entity;
    }

    public void ReplaceCanvas(UnityEngine.GameObject newValue) {
        var entity = canvasEntity;
        if (entity == null) {
            entity = SetCanvas(newValue);
        } else {
            entity.ReplaceCanvas(newValue);
        }
    }

    public void RemoveCanvas() {
        canvasEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class UiEntity {

    public CanvasComponent canvas { get { return (CanvasComponent)GetComponent(UiComponentsLookup.Canvas); } }
    public bool hasCanvas { get { return HasComponent(UiComponentsLookup.Canvas); } }

    public void AddCanvas(UnityEngine.GameObject newValue) {
        var index = UiComponentsLookup.Canvas;
        var component = CreateComponent<CanvasComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCanvas(UnityEngine.GameObject newValue) {
        var index = UiComponentsLookup.Canvas;
        var component = CreateComponent<CanvasComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCanvas() {
        RemoveComponent(UiComponentsLookup.Canvas);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class UiMatcher {

    static Entitas.IMatcher<UiEntity> _matcherCanvas;

    public static Entitas.IMatcher<UiEntity> Canvas {
        get {
            if (_matcherCanvas == null) {
                var matcher = (Entitas.Matcher<UiEntity>)Entitas.Matcher<UiEntity>.AllOf(UiComponentsLookup.Canvas);
                matcher.componentNames = UiComponentsLookup.componentNames;
                _matcherCanvas = matcher;
            }

            return _matcherCanvas;
        }
    }
}
